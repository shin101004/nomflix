{"version":3,"sources":["components/Section.js","components/Loader.js","components/Message.js","components/Star.js","components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","components/Header.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Star","rating","this","rows","i","push","Component","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","year","isMovie","to","className","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","data","results","setState","React","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","SearchContainer","event","preventDefault","searchByTerm","target","a","console","log","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Item","Genre","Divider","Overview","DetailPresenter","result","backdrop_path","still_path","genres","name","overview","DetailContainer","pathname","location","includes","match","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d51c89f1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom : 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size : 14px;\n    font-weight : 600;\n    \n`;\nconst Grid = styled.div`\n    margin-top : 25px;\n    display : grid;\n    grid-template-columns : repeat(auto-fill, 125px);\n    grid-gap : 25px;\n`;\n\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title : PropTypes.string.isRequired,\n    children : PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height : 100vh;\n    width : 100vw;\n    display : flex;\n    justify-content : center;\n    font-size : 32px;\n    margin-top : 20px;\n`;\n\nexport default () => <Container><span role=\"img\" aria-label=\"Loading\">⏰</span></Container>;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components'\n\nconst Container = styled.div`\nwidth : 100vw;\ndisplay : flex;\njustify-content : center;\n`;\n\nconst Text = styled.span`\n    color : ${props=>props.color};\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text : PropTypes.string.isRequired,\n    color : PropTypes.string.isRequired\n}\n\nexport default Message;","import React, { Component } from 'react';\n\nclass Star extends Component {\n    render() {\n        const rating = this.props.rating;\n        const rows = [];\n        for(let i=0;i<rating/2-1;i++) {\n            rows.push(\"⭐️\");\n        }\n        return (\n            <>\n                {rows}\n            </>\n        );\n    }\n}\n\nexport default Star;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Star from \"./Star\";\n\nconst Container = styled.div`\n    font-size : 12px;\n`;\n\nconst Image = styled.div`\n    background-image : url(${props=>props.bgUrl});\n    height : 180px;\n    background-size : cover;\n    border-radius : 4px;\n    background-position : center center;\n    transition : opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom : 5px;\n    /* right : 5px; */\n    position : absolute;\n    display : block;\n    width : 100%;\n    opacity : 0;\n    transition : opacity 0.1s linear;\n    ${Star} {\n        text-align : left;\n    }\n    .ratingNum {\n        float : right;\n    }\n`;\n\nconst ImageContainer = styled.div`\n    position: relative;\n    margin-bottom : 5px;\n    &:hover {\n        ${Image} {\n            opacity : 0.3;\n        }\n        ${Rating} {\n            opacity : 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display : block;\n    margin-bottom : 3px;\n`;\n\nconst Year = styled.span`\n    font-size : 10px;\n    color : rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) => (\n<Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl }`: `./noPosterSmall.png`} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        <Star rating={rating}/>\n                    </span>\n                    <span className=\"ratingNum\">\n                    {\" \"}{rating}/10\n                    </span>\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 15 ? `${title.substring(0,18)}...` :title }</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n\nPoster.propTypes = {\n    id:PropTypes.number.isRequired,\n    imageUrl : PropTypes.string,\n    title : PropTypes.string.isRequired,\n    rating : PropTypes.number,\n    year : PropTypes.string,\n    isMovie : PropTypes.bool\n}\n\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../components/Section\"\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\nconst HomePresenter = ({nowPlaying, upcoming, popular, error,loading}\n    ) =>\n    <>\n    <Helmet>\n        <title>Movies | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n        <Loader/> \n    ): (\n        <Container>\n            {nowPlaying && nowPlaying.length>0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie=>(\n                <Poster key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year = {movie.release_date && movie.release_date.substring(0,4)}\n        />\n        ))}\n            </Section>\n            )}\n    \n            {upcoming && upcoming.length>0 && (\n            <Section title=\"Up Coming\">\n                {upcoming.map(movie=>(\n                <Poster key={movie.id}\n                        id={movie.id}\n                        title={movie.original_title}\n                        imageUrl={movie.poster_path}\n                        isMovie={true}\n                        rating={movie.vote_average}\n                        year = {movie.release_date && movie.release_date.substring(0,4)}\n                />\n                ))}\n            </Section>\n            )}\n    \n            {popular && popular.length>0 && (\n            <Section title=\"Popular\">\n                {popular.map(movie=>(\n               <Poster key={movie.id}\n               id={movie.id}\n               title={movie.original_title}\n               imageUrl={movie.poster_path}\n               isMovie={true}\n               rating={movie.vote_average}\n               year = {movie.release_date && movie.release_date.substring(0,4)}\n       />\n       ))}\n            </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n    )}\n    </>\n    \n\n\nHomePresenter.propTypes = {\n    nowPlaying :PropTypes.array,\n    upcoming:PropTypes.array,\n    popular  :PropTypes.array,\n    error :PropTypes.string,\n    loading  :PropTypes.bool.isRequired\n};\n\n\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL : \"https://api.themoviedb.org/3/\",\n    params : {\n        api_key : \"9a735f45eff9846b9afeee748729ddaf\",\n        language : \"en-Us\"   \n    }\n});\n\nexport const moviesApi = {\n    nowPlaying : ()=> api.get(\"movie/now_playing\"),\n    upcoming : ()=> api.get(\"movie/upcoming\"),\n    popular : ()=> api.get('movie/popular'),\n    movieDetail: (id)=> api.get(`movie/${id}`,{\n        params : {\n            append_to_response : 'videos'\n        }\n    }),\n    search : (term)=>api.get('search/movie',{\n        params : {\n            query : term\n        }\n    })\n}\n\nexport const tvApi ={\n    topRated : () => api.get(\"tv/top_rated\"),\n    popular : () => api.get(\"tv/popular\"),\n    airing : ()=>api.get(\"tv/airing_today\"),\n    showDetail : (id)=> api.get(`tv/${id}`,{\n        params : {\n            append_to_response : 'videos'\n        }\n    }),\n    search : (term)=>api.get('search/tv',{\n        params : {\n            query : term\n        }\n    })\n}","import HomeContainer from \"./HomeContainer\"\n\nexport default HomeContainer;","import React from \"react\"\nimport HomePresenter from \"./HomePresenter.js\"\nimport {moviesApi} from \"../../api\"\n\n// eslint-disable-next-line \nexport default class extends React.Component{\n    state = {\n        nowPlaying : null,\n        upcoming : null,\n        popular : null,\n        error : null,\n        loading : true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data:{results : nowPlaying}\n            } = await moviesApi.nowPlaying();\n            const {\n                data:{results : upcoming}\n            } = await moviesApi.upcoming();\n            const {\n                data:{results : popular}\n            } = await moviesApi.popular();\n            // throw Error();\n            //eslint-disable-next-line\n            this.setState({\n                nowPlaying : nowPlaying,\n                upcoming : upcoming,\n                popular : popular,\n            });\n        } catch {\n                this.setState({\n                error : \"Can't get Movie Information\",\n            });\n        } finally {\n            this.setState({\n                loading : false\n            });\n        }\n    }   \n\n    render(){\n        const {nowPlaying, upcoming, popular, loading, error} = this.state;\n        return <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n                />\n        \n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\"\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\nconst TVPresenter = (\n    {topRated,\n    airingToday,\n    popular,\n    error,\n    loading})=> \n    <>\n        <Helmet>\n            <title>TV | Nomfilx</title>\n        </Helmet>\n        { loading ? ( \n        <Loader/> \n        ) : ( \n        <Container>\n            {topRated && topRated.length > 0 &&\n            <Section title=\"Top Rated Shows\">\n                {topRated.map(show=>(\n                    <Poster key={show.id}\n                    id={show.id}\n                    title={show.original_name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year = {show.first_air_date && show.first_air_date.substring(0,4)}\n                    />\n                ))}\n            </Section>}\n            {popular && popular.length > 0 &&\n            <Section title=\"Popular Shows\">\n                {popular.map(show=>(\n                    <Poster key={show.id}\n                    id={show.id}\n                    title={show.original_name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year = {show.first_air_date && show.first_air_date.substring(0,4)}\n                    />\n                ))}\n            </Section>}\n            {airingToday && airingToday.length > 0 &&\n            <Section title=\"Airing Today\">\n                {airingToday.map(show=>(\n                <Poster key={show.id}\n                        id={show.id}\n                        title={show.original_name}\n                        imageUrl={show.poster_path}\n                        rating={show.vote_average}\n                        year = {show.first_air_date && show.first_air_date.substring(0,4)}\n                />\n                ))}\n            </Section>}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n        </Container>\n        )}\n    </>\n\nTVPresenter.propTypes = {\n    topRated :PropTypes.array,\n    airingToday:PropTypes.array,\n    popular  :PropTypes.array,\n    error :PropTypes.string,\n    loading  :PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer;","import React from \"react\"\nimport TVPresenter from \"./TVPresenter.js\"\nimport {tvApi} from \"../../api\"\n\n// eslint-disable-next-line \nexport default class extends React.Component{\n    state = {\n        topRated : null,\n        airingToday : null,\n        popular : null,\n        error : null,\n        loading : true\n    };\n\n    async componentDidMount(){\n        try {\n            const {\n                data:{results : topRated}} = await tvApi.topRated();\n            const {\n                data:{results:airingToday}} = await tvApi.airing();\n            const {\n                data : {results : popular}} = await tvApi.popular();\n            this.setState({\n                topRated : topRated,\n                airingToday : airingToday,\n                popular : popular\n            })\n        } catch (error) {\n            this.setState({\n                error : \"Can't get TV Information\"\n            })\n        } finally {\n            this.setState({\n                loading : false\n            })\n        }\n    }\n\n    render(){\n        const {topRated, airingToday, popular, loading, error} = this.state;\n        \n        return (\n            <TVPresenter\n                topRated={topRated}\n                airingToday={airingToday}\n                popular={popular}\n                error={error}\n                loading={loading}\n                />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../components/Loader\";\nimport Section from \"../../components/Section\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\n\nconst Container = styled.div`\n    padding : 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom : 50px;\n    width : 100%;\n`;\n\nconst Input = styled.input`\n    all : unset;\n    font-size : 28px;\n    width : 100%;\n`;\n\nconst SearchPresenter = (\n    {\n    movieResults,\n    tvResults,\n    searchTerm,\n    error,\n    loading,\n    handleSubmit,\n    updateTerm})=> \n    <Container>\n        <Helmet>\n            <title>Search | Nomflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Movies or TV shows ...\" value={searchTerm} onChange={updateTerm}/>\n        </Form>\n        {loading ? ( \n        <Loader /> \n        ): (\n        <>   \n            {movieResults && movieResults.length >0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie=>(\n                    <Poster key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    imageUrl={movie.poster_path}\n                    isMovie={true}\n                    rating={movie.vote_average}\n                    year = {movie.release_date && movie.release_date.substring(0,4)}\n            />\n            ))}\n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length >0 && (\n                <Section title=\"TV Results\">\n                    {tvResults.map(tv=>(\n                    <Poster key={tv.id}\n                    id={tv.id}\n                    title={tv.original_name}\n                    imageUrl={tv.poster_path}\n                    rating={tv.vote_average}\n                    year = {tv.first_air_date && tv.first_air_date.substring(0,4)}\n                    />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n            {tvResults &&  \n                movieResults &&\n                tvResults.length ===0 &&   \n                movieResults.length===0 &&\n                <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n            }\n        </>    \n        )}\n    </Container>;\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    searchTerm : PropTypes.string,\n    error : PropTypes.string,\n    loading :PropTypes.bool.isRequired,\n    handleSubmit : PropTypes.func.isRequired,\n    updateTerm : PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer;","import React, { useLayoutEffect } from \"react\"\nimport SearchPresenter from \"./SearchPresenter.js\"\nimport {moviesApi, tvApi} from \"../../api\"\n\n// eslint-disable-next-line \nexport default class extends React.Component{\n    state = {\n        movieResults : null,\n        tvResults : null,\n        searchTerm : \"\",\n        error : null,\n        loading : false\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm(searchTerm);\n        }\n    };\n\n    updateTerm = (event) => {\n        const {\n            target : {value}\n        } = event;\n        this.setState({searchTerm: value})\n    }\n\n    searchByTerm=async()=>{\n        const {searchTerm} = this.state;\n        this.setState({loading:true});\n        try {\n            const {data: { results : movieResults} } = await moviesApi.search(searchTerm);\n            const {data: { results : tvResults } }= await tvApi.search(searchTerm);\n            console.log(movieResults);\n            console.log(tvResults);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n            this.setState({loading:true});\n        } catch {\n            this.setState({error:\"Can't find searchTerm\"});\n        } finally {\n            this.setState({loading:false});\n        }\n    };\n\n    render(){\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n                />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../components/Loader\";\nimport Star from \"../../components/Star\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    height : calc(100vh - 50px);\n    width : 100%;\n    position : relative;\n    padding : 50px;\n`;\n\nconst Backdrop = styled.div`\n    position : absolute;\n    top : 0px;\n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-image : url(${props=>props.bgImage});\n    background-size : cover;\n    background-position : center center;\n    filter : blur(3px);\n    opacity : 0.5;\n`;\n\nconst Content = styled.div`\n    display : flex;\n    width : 100%; \n    position: relative;\n    z-index : 1;  \n    height : 100%;\n`;\n\nconst Cover = styled.div`\n    width : 30%;\n    background-image : url(${props=>props.bgImage});\n    background-size : cover;\n    background-position : center center;\n    height : 100%;\n    border-radius : 5px;\n`;\n\nconst Data = styled.div`\n    width : 70%;\n    margin-left : 10px;\n`;\n\nconst Title = styled.h1`\n    font-size : 32px;\n    margin-bottom : 20px;\n    font-weight : 600;\n`;\n\nconst ItemContainer = styled.div``;\n\nconst Item = styled.span`\n    font-size : 18px;\n`;\n\nconst Genre = styled.span`\n    display : inline-block;\n    &:not(:last-child)::after{\n     content : \" / \";\n     white-space : pre;\n    }\n`\n\nconst Divider = styled.span`\n    margin : 0 10px;\n`;\n\nconst Overview = styled.div`\n    margin-top : 10px;\n    font-size : 24px;\n    line-height : 1.5em;\n    color : rgba(255,255,255,0.7);\n    text-shadow : 2px 2px black;\n    width : 70%;\n`;\n\n\nconst DetailPresenter = ({result,error,loading})=> \n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader/>\n        </>\n       ) :(\n        <Container>\n            <Helmet>\n                <title>{result.original_title ? result.original_title : result.original_name}{\" \"} | Nomflix</title>\n            </Helmet>\n            <Backdrop bgImage={result.backdrop_path ?\n                `https://image.tmdb.org/t/p/original${result.backdrop_path}` :\n                `../noPosterSmall.png`}\n            />\n            <Content>\n                <Cover bgImage=\n                    {result.poster_path ? \n                    `https://image.tmdb.org/t/p/original${result.poster_path}` : \n                    (\n                        result.still_path ? \n                        `https://image.tmdb.org/t/p/original${result.still_path}` :\n                        `../noPosterSmall.png`\n                    )}\n                />\n                <Data>\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                    <ItemContainer> \n                        <Item>\n                            {result.genres && result.genres.map(data=>(<Genre>{data.name}</Genre>))}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>📆&nbsp;\n                            {result.release_date ? \n                            result.release_date.substring(0,4) : \n                            result.first_air_date.substring(0,4)}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            <Star rating={result.vote_average}/> &nbsp;\n                            {result.vote_average}/10\n                        </Item>\n                        <Item>\n                            \n                        </Item>\n                    </ItemContainer>\n                    <Overview>\n                            {result.overview}\n                    </Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\n\nDetailPresenter.propTypes = {\n    result : PropTypes.object,\n    error :PropTypes.string,\n    loading  :PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer;","import React from \"react\"\nimport DetailPresenter from \"./DetailPresenter.js\"\nimport { moviesApi, tvApi } from \"../../api.js\";\n\n// eslint-disable-next-line \nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {location : {pathname}} = props;\n        this.state = {\n            result : null,\n            error : null,\n            loading : true,\n            isMovie : pathname.includes(\"/movie/\")\n        };\n    }\n    \n    async componentDidMount() {\n        const {\n            match:{\n                params :{id}\n            },\n            history : {push},\n            } = this.props;\n        const {isMovie} = this.state;\n        \n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result=null;\n        \n        try {\n            if(isMovie) {\n                ({data:result}=await moviesApi.movieDetail(parsedId))\n            } else {\n                ({data:result}= await tvApi.showDetail(parsedId))\n            }\n        } catch {\n            this.setState({error:\"Can't find anything\"});\n        } finally {\n            this.setState({loading:false,result});\n        }\n        //  this.isTV = pathname.includes(\"/tv/\");\n    }\n    render(){\n        const {result, loading, error} = this.state;\n        console.log(this.state);\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n                />\n        )\n    }\n}","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Header = styled.header`\n    color : white;\n    position : fixed;\n    top : 0;\n    left : 0;\n    width : 100%;\n    height : 50px;\n    display : flex;\n    align-items : center;\n    background-color : rgba(20,20,20,0.8);\n    z-index : 10;\n    box-shadow : 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\nconst List = styled.ul`\n    display : flex;\n`\nconst Item = styled.li`\n    width: 80px;\n    height : 50px;\n    padding : 0 10px;\n    text-align : center;\n    border-bottom : 3px solid \n    ${props=>props.current ? \"#3498db\" : \"transparent\"};\n    transition : border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height : 50px;\n    display : flex;\n    align-items : center;\n    justify-content : center;\n`;\n\n//eslint-disable-next-line\nexport default withRouter(({location:{pathname}})=>(\n    // Router.js가 가지고 있는 props를 전달받아 사용할 수 있음.\n    <Header>\n        \n        <List>\n            <Item current={pathname===\"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname===\"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname===\"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header> \n));","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\n// 자동으로 Home 폴더 내의 Index.js 호출\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\nimport Header from \"../components/Header\";\n\n//eslint-disable-next-line\nexport default () => (\n    <Router>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/tv\" exact component={TV}/>\n            <Route path=\"/search\" exact component={Search}/>\n            <Route path=\"/movie/:id\" component={Detail}/>\n            <Route path=\"/show/:id\" component={Detail}/>\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n)","import {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\";\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration : none;\n        color :inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size : 14px;\n        background-color : rgba(20,20,20,1);\n        color : white;\n        padding-top : 50px;\n    }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport Router from \"../components/Router\";\nimport GlobalStyles from './GlobalStyles';\n\n\nfunction App() {\n    return (\n        <>\n            <Router/>\n            <GlobalStyles/>\n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"../src/components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}